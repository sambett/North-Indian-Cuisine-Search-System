"""
Demo: Advanced RAG Evaluation & Hindi Translation
Run this to see your enhanced system in action
"""

import time
import json
from rag_enhancer import SmartRAGEnhancer

def demo_evaluation_system():
    """Demonstrate the evaluation capabilities"""
    
    print("üß† RAG System Enhancement Demo")
    print("=" * 50)
    
    # Initialize enhancer
    enhancer = SmartRAGEnhancer()
    
    # Test Hindi translation
    print("\n1. üìù Hindi Translation Test")
    print("-" * 30)
    
    hindi_recipes = [
        "‡§ü‡§Æ‡§æ‡§ü‡§∞ ‡§™‡•Å‡§≤‡§ø‡§Ø‡•ã‡§ó‡§∞‡•á ‡§∞‡•á‡§∏‡§ø‡§™‡•Ä - Spicy Tomato Rice (Recipe In Hindi)",
        "‡§π‡§≤‡•ç‡§¶‡•Ä ‡§î‡§∞ ‡§ú‡•Ä‡§∞‡§æ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§¶‡§æ‡§≤ ‡§∞‡•á‡§∏‡§ø‡§™‡•Ä",
        "Dal Makhani with Butter and Cream"  # Already English
    ]
    
    for recipe in hindi_recipes:
        translated = enhancer.translate_hindi_text(recipe)
        print(f"Original:   {recipe}")
        print(f"Translated: {translated}")
        print()
    
    # Test evaluation metrics
    print("2. üìä Search Quality Evaluation")
    print("-" * 30)
    
    # Simulate search results
    mock_results = {
        'documents': [["Dal Makhani is a rich North Indian curry made with black lentils, butter, and cream"]],
        'metadatas': [[{
            'recipe_name': 'Dal Makhani Recipe',
            'cuisine': 'North Indian',
            'course': 'Main Course',
            'ingredient_count': 8
        }]],
        'distances': [[0.15]]  # Low distance = high confidence
    }
    
    query = "What ingredients are in Dal Makhani?"
    response_time = 0.8  # 800ms
    
    evaluation = enhancer.evaluate_search_results(query, mock_results, response_time)
    
    print(f"Query: {query}")
    print(f"Quality Score: {evaluation['quality_score']}/100")
    print(f"Confidence: {evaluation['avg_confidence']}%")
    print(f"Response Time: {evaluation['response_time']}ms")
    print(f"Assessment: {evaluation['summary']}")
    
    # Test result enhancement
    print("\n3. ‚ú® Result Enhancement")
    print("-" * 30)
    
    enhanced = enhancer.enhance_search_results(mock_results, query)
    
    for result in enhanced:
        print(f"Recipe: {result['metadata']['recipe_name']}")
        print(f"Confidence: {result['confidence']:.1%}")
        print(f"Match Reason: {result['match_reason']}")
        print(f"Quality: {', '.join(result['quality_indicators'])}")
        print()
    
    print("4. üéØ Key Improvements Summary")
    print("-" * 30)
    print("‚úÖ Hindi recipe names automatically translated")
    print("‚úÖ Confidence scores with color coding")
    print("‚úÖ Match explanations for transparency")
    print("‚úÖ Quality indicators for each result")
    print("‚úÖ Performance metrics tracking")
    print("‚úÖ Response time optimization analysis")
    print("‚úÖ Search pattern analytics")
    print()
    
    print("üöÄ Your RAG system is now enterprise-grade!")

if __name__ == "__main__":
    demo_evaluation_system()
